# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску,
как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит
адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28 в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего
в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""
cidr = input("Введите IP-сети в формате X.X.X.X/X: ")
ip, mask = cidr.split("/")
ipo = ip.split(".")
ipb = f"""{bin(int(ipo[0]))[2:]:0>8}{bin(int(ipo[1]))[2:]:0>8}{bin(int(ipo[2]))[2:]:0>8}{bin(int(ipo[3]))[2:]:0>8}"""
netb = ipb[0:int(mask)] + "0" * (32 - int(mask))
maskb = "1" * int(mask) + "0" * (32 - int(mask))

print(f"""Network:
{int(netb[0:8],2):<10}{int(netb[8:16],2):<10}{int(netb[16:24],2):<10}{int(netb[24:32],2):<10}
{netb[0:8]:8}  {netb[8:16]:8}  {netb[16:24]:8}  {netb[24:32]:8}

Mask:
/{mask}
{int(maskb[0:8],2):<10}{int(maskb[8:16],2):<10}{int(maskb[16:24],2):<10}{int(maskb[24:32],2):<10}
{maskb[0:8]:8}  {maskb[8:16]:8}  {maskb[16:24]:8}  {maskb[24:32]:8}
""")
